<?php

/**
 * @file
 * Provides "reject" link for users comments on published content.
 */

/**
 * Comment is rejected.
 */
define('COMMENT_REJECTED', 2);


/**
 * Implements hook_permission().
 */
function telegraaf_reject_comment_permission() {
  return array(
    'reject comments' => array(
      'title' => t('Reject Comments'),
      'description' => t('Allow to reject comments.'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function telegraaf_reject_comment_menu() {
  $items['comment/%/reject'] = array(
    'title' => 'Reject',
    'page callback' => 'telegraaf_reject_comment_callback',
    'page arguments' => array(1),
    'access arguments' => array('administer comments'),
    'file' => 'telegraaf_reject_comment.pages.inc',
    'weight' => 1,
  );
  $items['admin/content/comment/rejected'] = array(
    'title' => 'Rejected comments',
    'title callback' => 'telegraaf_reject_comment_count_rejected',
    'page arguments' => array('rejected'),
    'page callback' => 'telegraaf_reject_comment_admin',  
    'access arguments' => array('reject comments'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}


/**
 * Returns a menu title which includes the number of rejected comments.
 */
function telegraaf_reject_comment_count_rejected() {
  $count = db_query('SELECT COUNT(cid) FROM {comment} WHERE status = :status', array(
    ':status' => COMMENT_REJECTED,
  ))->fetchField();
  return t('Rejected comments (@count)', array('@count' => $count));
}


/**
 * Menu callback; present an administrative comment listing.
 */
function telegraaf_reject_comment_admin($type = 'new') {
  return drupal_get_form('telegraaf_reject_comment_admin_overview', $type);
}

/**
 * Form builder for the rejected comment overview administration form.
 *
 * @param $arg
 *   Current path's fourth component: the type of overview form.
 *
 * @ingroup forms
 * @see telegraaf_reject_comment_admin_overview_validate()
 * @see telegraaf_reject_comment_admin_overview_submit()
 * @see theme_telegraaf_reject_comment_admin_overview()
 */
function telegraaf_reject_comment_admin_overview($form, &$form_state, $arg) {
  // Build an 'Update options' form.
  $form['options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Update options'),
    '#attributes' => array('class' => array('container-inline')),
  );

  if ($arg == 'rejected') {
    $options['publish'] = t('Publish the selected comments');
  }
  else {
    $options['unpublish'] = t('Unpublish the selected comments');
  }
  $options['delete'] = t('Delete the selected comments');

  $form['options']['operation'] = array(
    '#type' => 'select',
    '#title' => t('Operation'),
    '#title_display' => 'invisible',
    '#options' => $options,
    '#default_value' => 'publish',
  );
  $form['options']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update'),
  );

  // Load the comments that need to be displayed.
  $status = ($arg == 'rejected') ? COMMENT_REJECTED : COMMENT_PUBLISHED;
  $header = array(
    'subject' => array('data' => t('Subject'), 'field' => 'subject'),
    'author' => array('data' => t('Author'), 'field' => 'name'),
    'posted_in' => array('data' => t('Posted in'), 'field' => 'node_title'),
    'changed' => array('data' => t('Updated'), 'field' => 'c.changed', 'sort' => 'desc'),
    'operations' => array('data' => t('Operations')),
  );

  $query = db_select('comment', 'c')->extend('PagerDefault')->extend('TableSort');
  $query->join('node', 'n', 'n.nid = c.nid');
  $query->addField('n', 'title', 'node_title');
  $query->addTag('node_access');
  $result = $query
    ->fields('c', array('cid', 'subject', 'name', 'changed'))
    ->condition('c.status', $status)
    ->limit(50)
    ->orderByHeader($header)
    ->execute();

  $cids = array();

  // We collect a sorted list of node_titles during the query to attach to the
  // comments later.
  foreach ($result as $row) {
    $cids[] = $row->cid;
    $node_titles[] = $row->node_title;
  }
  $comments = comment_load_multiple($cids);

  // Build a table listing the appropriate comments.
  $options = array();
  $destination = drupal_get_destination();

  foreach ($comments as $comment) {
    // Remove the first node title from the node_titles array and attach to
    // the comment.
    $comment->node_title = array_shift($node_titles);
    $options[$comment->cid] = array(
      'subject' => array(
        'data' => array(
          '#type' => 'link',
          '#title' => $comment->subject,
          '#href' => 'comment/' . $comment->cid,
          '#options' => array('attributes' => array('title' => truncate_utf8($comment->comment_body[LANGUAGE_NONE][0]['value'], 128)), 'fragment' => 'comment-' . $comment->cid),
        ),
      ),
      'author' => theme('username', array('account' => $comment)),
      'posted_in' => array(
        'data' => array(
          '#type' => 'link',
          '#title' => $comment->node_title,
          '#href' => 'node/' . $comment->nid,
        ),
      ),
      'changed' => format_date($comment->changed, 'short'),
      'operations' => array(
        'data' => array(
          '#type' => 'link',
          '#title' => t('edit'),
          '#href' => 'comment/' . $comment->cid . '/edit',
          '#options' => array('query' => $destination),
        ),
      ),
    );
  }

  $form['comments'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No comments available.'),
  );

  $form['pager'] = array('#theme' => 'pager');

  return $form;
}

/**
 * Validate telegraaf_reject_comment_admin_overview form submissions.
 */
function telegraaf_reject_comment_admin_overview_validate($form, &$form_state) {
  $form_state['values']['comments'] = array_diff($form_state['values']['comments'], array(0));
  // We can't execute any 'Update options' if no comments were selected.
  if (count($form_state['values']['comments']) == 0) {
    form_set_error('', t('Select one or more comments to perform the update on.'));
  }
}

/**
 * Process telegraaf_reject_comment_admin_overview form submissions.
 *
 * Execute the chosen 'Update option' on the selected comments, such as
 * publishing, unpublishing or deleting.
 */
function telegraaf_reject_comment_admin_overview_submit($form, &$form_state) {
  $operation = $form_state['values']['operation'];
  $cids = $form_state['values']['comments'];

  if ($operation == 'delete') {
    comment_delete_multiple($cids);
  }
  else {
    foreach ($cids as $cid => $value) {
      $comment = comment_load($value);

      if ($operation == 'unpublish') {
        $comment->status = COMMENT_NOT_PUBLISHED;
      }
      elseif ($operation == 'publish') {
        $comment->status = COMMENT_PUBLISHED;
      }
      comment_save($comment);
    }
  }
  drupal_set_message(t('The update has been performed.'));
  $form_state['redirect'] = 'admin/content/comment/rejected';
  cache_clear_all();
}


/**
 * Implements hook_comment_view().
 *
 * The content built for the comment (field values, comments, file attachments
 * or other comment components) will vary depending on the $view_mode parameter.
 *
 * @param object $comment
 *   A comment object.
 * @param string $view_mode
 *   View mode, e.g. 'full', 'teaser'...
 * @param string $langcode
 *   (optional) A language code to use for rendering. Defaults to the global
 *   content language of the current request.
 */
function telegraaf_reject_comment_comment_view($comment, $view_mode = 'full', $langcode = NULL) {
  $node = node_load($comment->nid);
  $links = $comment->content['links']['comment']['#links'];
  if (empty($comment->in_preview)) {
    $comment->content['links']['comment'] = array(
      '#theme' => 'links__comment__comment',
      '#links' => telegraaf_reject_comment_comment_links($comment, $node, $links),
      '#attributes' => array('class' => array('links', 'inline')),
    );
  }
}

/**
 * Helper function, build links for an individual comment.
 *
 * Adds reject link depending on the current user permissions.
 *
 * @param object $comment
 *   The comment object.
 * @param object $node
 *   The node the comment is attached to.
 * @param array $links
 *   Array of already existed links.
 *
 * @return array
 *   A structured array of links.
 */
function telegraaf_reject_comment_comment_links($comment, $node, $links) {
  if ($node->comment == COMMENT_NODE_OPEN) {
    if (user_access('administer comments') && user_access('post comments') && user_access('reject comments')) {
      if ($comment->status !== strval(COMMENT_REJECTED)) {
        $links['comment-reject'] = array(
          'title' => t('reject'),
          'href' => "comment/$comment->cid/reject",
          'html' => TRUE,
          'query' => array('token' => drupal_get_token("comment/$comment->cid/reject")),
        );
      }
      else {
        $links['comment-approve'] = array(
          'title' => t('approve'),
          'href' => "comment/$comment->cid/approve",
          'html' => TRUE,
          'query' => array('token' => drupal_get_token("comment/$comment->cid/approve")),
        );
      }
    }
  }
  return $links;
}
